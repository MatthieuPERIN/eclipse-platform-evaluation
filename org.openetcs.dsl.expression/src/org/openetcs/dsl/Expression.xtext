grammar org.openetcs.dsl.Expression with org.eclipse.xtext.common.Terminals

generate expression "http://www.openetcs.org/dsl/Expression"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	phrase=Phrase;

terminal DOUBLE returns ecore::EDouble:
	INT '.' INT;
FQN: ID ("." ID)*;
Phrase:
	Expression|Statement;

Expression:
	EvaluationExpression;

EvaluationExpression returns Expression:
	OrExpression
;

Statement:
	SingleStatement | SelfStatement | MultiStatement;

SingleStatement:
	desgnator=Designator "<-" expression=Expression;

SelfStatement:
	"CurrentState" "<-" expression=Expression;

MultiStatement:
	desgnator=Designator "(" (expressions+=Expression)* ")";


OrExpression returns Expression:
	AndExpression ({OrExpression.left=current} op='OR' right=AndExpression)*;
AndExpression returns Expression:
	EqualityExpression ({AndExpression.left=current} op='AND' right=EqualityExpression)*;

EqualityExpression returns Expression:
	DashOperation ({EqualityExpression.left=current} op=( '=='|'!='|'<='|'>='|'in'|'not in') right=DashOperation)*;


DashOperation returns Expression:
	PointOperation ({DashOperation.left=current} op=('+'|'-') right=PointOperation)*;
PointOperation returns Expression:
	PowOperation ({PointOperation.left=current} op=('*'|'/') right=PowOperation)*;
PowOperation returns Expression:
	PrimaryExpression ({PowOperation.left=current} op=('^') right=PrimaryExpression)*;

//|'('EvaluationExpression')'|'NOT ('EvaluationExpression')'
PrimaryExpression returns Expression:
	UnaryExpression|'('EvaluationExpression')'|'NOT ('EvaluationExpression')';

UnaryExpression:
	Term;

Term:
	Designator |
	{StringValue} value=STRING |
	{IntegerValue} value=INT |
	{DoubleValue} value=DOUBLE;

Designator:
	(value=[ecore::EObject|FQN]);